// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using OPN.Data;

#nullable disable

namespace OPN.Data.Migrations
{
    [DbContext(typeof(ApplicationContext))]
    [Migration("20230612205138_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("OPN.Domain.Institution", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Institutions");
                });

            modelBuilder.Entity("OPN.Domain.InstitutionProportion", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("InstitutionId")
                        .HasColumnType("int");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<int>("Value")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("InstitutionId");

                    b.HasIndex("ProductId");

                    b.ToTable("InstitutionProportions");
                });

            modelBuilder.Entity("OPN.Domain.Login.LoggedUser", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("CancelledTasks")
                        .HasColumnType("int");

                    b.Property<int>("CompletedTasks")
                        .HasColumnType("int");

                    b.Property<string>("IDN")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("TaskId")
                        .HasColumnType("int");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("LoggedUsers");
                });

            modelBuilder.Entity("OPN.Domain.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("CurrentAmount")
                        .HasColumnType("int");

                    b.Property<int>("InitialAmount")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Products");
                });

            modelBuilder.Entity("OPN.Domain.Tasks.OPNTask", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime?>("ConclusionTime")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Goal")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("UserIDN")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId")
                        .IsUnique();

                    b.ToTable("OPNTask");

                    b.HasDiscriminator<string>("Discriminator").HasValue("OPNTask");
                });

            modelBuilder.Entity("OPN.Domain.Tasks.OPNProductHandlingTask", b =>
                {
                    b.HasBaseType("OPN.Domain.Tasks.OPNTask");

                    b.Property<int>("InstitutionId")
                        .HasColumnType("int");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<int>("ProportionId")
                        .HasColumnType("int");

                    b.HasIndex("InstitutionId");

                    b.HasIndex("ProductId");

                    b.HasIndex("ProportionId")
                        .IsUnique();

                    b.HasDiscriminator().HasValue("OPNProductHandlingTask");
                });

            modelBuilder.Entity("OPN.Domain.InstitutionProportion", b =>
                {
                    b.HasOne("OPN.Domain.Institution", "Institution")
                        .WithMany()
                        .HasForeignKey("InstitutionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("OPN.Domain.Product", "Product")
                        .WithMany()
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Institution");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("OPN.Domain.Tasks.OPNTask", b =>
                {
                    b.HasOne("OPN.Domain.Login.LoggedUser", null)
                        .WithOne("Task")
                        .HasForeignKey("OPN.Domain.Tasks.OPNTask", "UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("OPN.Domain.Tasks.OPNProductHandlingTask", b =>
                {
                    b.HasOne("OPN.Domain.Institution", "Institution")
                        .WithMany()
                        .HasForeignKey("InstitutionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("OPN.Domain.Product", "Product")
                        .WithMany()
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("OPN.Domain.InstitutionProportion", "Proportion")
                        .WithOne()
                        .HasForeignKey("OPN.Domain.Tasks.OPNProductHandlingTask", "ProportionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Institution");

                    b.Navigation("Product");

                    b.Navigation("Proportion");
                });

            modelBuilder.Entity("OPN.Domain.Login.LoggedUser", b =>
                {
                    b.Navigation("Task");
                });
#pragma warning restore 612, 618
        }
    }
}
